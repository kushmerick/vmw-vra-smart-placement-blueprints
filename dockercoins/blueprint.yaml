formatVersion: 1
name: dockercoins
version: 10
inputs:
  requestor:
    type: string
    default: aa
    minLength: 2
    maxLength: 2
  vmsize:
    type: string
    default: medium
    enum:
      - tiny
      - small
      - medium
      - large
      - xlarge
  workers:
    type: integer
    default: 1
    minimum: 0
  application:
    type: string
    default: dcoins
    enum:
      - dcoins
  repo:
    type: string
    default: 'https://github.com/dockersamples/dockercoins'
  syslog-protocol:
    type: string
    enum:
      - udp
      - tcp
    default: udp
  syslog-address:
    type: string
    default: symphony.licf.vmware.com
  syslog-port:
    type: integer
    default: 514
resources:
  manager:
    type: Cloud.vSphere.Machine
    metadata:
      layoutPosition:
        - 0
        - 0
    properties:
      flavor: '${input.vmsize}'
      image: ubuntu2004
      name: 'dsb-${input.application}-${input.requestor}-manager-${substring(env.deploymentId,0,8)}'
      cloudConfig: |
        #cloud-config
        ssh_pwauth: yes
        repo_update: true
        repo_upgrade: all
        package_update: true
        package_upgrade: all
        packages:
          - sshpass
          - net-tools
          - docker.io
          - docker-compose
        write_files:
          - content: |
              #!/bin/sh
              LOG=/var/log/app.log
              workers=0
              while [ $workers -lt ${input.workers} ]
              do
                echo "`date` - Manaager waiting for ${input.workers} workers but found $workers" >> $LOG 2>&1
                sleep 15
                echo "`date` - Manager looking for nodes" >> $LOG 2>&1
                docker node ls >> $LOG 2>&1
                workers=$(expr $(docker node ls | grep -v ID | wc -l) - 1) # exclude manager
              done
              echo "`date` - Manager found $wrkrs workers" >> $LOG 2>&1
            path: /root/wait-for-workers.sh
            permissions: 755
        runcmd:
          - LOG=/var/log/app.log
          - echo "`date` - Manager starting setup" >> $LOG 2>&1
          - hostnamectl set-hostname '${self.name}' >> $LOG 2>&1
          - echo "`date` - Configuring Docker" >> $LOG 2>&1
          - systemctl enable docker
          - echo '{"log-driver":"syslog","log-opts":{"syslog-address":"${input.syslog-protocol}://${input.syslog-address}:${input.syslog-port}","tag":"magna-smart-placement-zoo/application=${input.application}/deployment=${substring(env.deploymentId,0,8)}/{{.ImageName}}/{{.Name}}/{{.ID}}"}}' > /etc/docker/daemon.json
          - service docker restart
          - echo "`date` - Manager cloning" >> $LOG 2>&1
          - cd /root
          - git clone ${input.repo} >> $LOG 2>&1
          - echo "`date` - Manager initializing swarm" >> $LOG 2>&1
          - docker swarm init >> $LOG 2>&1
          - echo "`date` = Manager waiting for workers" >> $LOG 2>&1
          - /root/wait-for-workers.sh >> $LOG 2>&1
          - echo "`date` - Manager preparing Docker-Compose YAML" >> $LOG 2>&1
          - cd /root/dockercoins
          - # quick-and-dirty migration from version 2 to 3
          - 'sed -i -e ''s/version: "2"/version: "3"/'' docker-compose.yml'
          - 'sed -i -e ''s/build:/image:/'' docker-compose.yml'
          - # make volumes mountable on all swarm members
          - 'sed -i -e ''s|./webui|/root/dockercoins/webui|'' docker-compose.yml'
          - echo "`date` - Manager prepared Docker-Compose YAML..." >> $LOG 2>&1
          - cat docker-compose.yml >> $LOG 2>&1
          - echo "`date` - Manager building and deploying ${input.application}" >> $LOG 2>&1
          - # For using vmware corporate Harbor as a docker hub proxy
          - sed -i 's|FROM\ |FROM\ harbor-repo.vmware.com/dockerhub-proxy-cache/library/|g' rng/Dockerfile >> $LOG 2>&1
          - sed -i 's|FROM\ |FROM\ harbor-repo.vmware.com/dockerhub-proxy-cache/library/|g' hasher/Dockerfile >> $LOG 2>&1
          - sed -i 's|FROM\ |FROM\ harbor-repo.vmware.com/dockerhub-proxy-cache/library/|g' webui/Dockerfile >> $LOG 2>&1
          - sed -i 's|FROM\ |FROM\ harbor-repo.vmware.com/dockerhub-proxy-cache/library/|g' worker/Dockerfile >> $LOG 2>&1
          - sed -i 's|image:\ redis|image:\ harbor-repo.vmware.com/dockerhub-proxy-cache/library/redis|g' docker-compose.yml >> $LOG 2>&1
          - # 
          - docker build rng -t rng >> $LOG 2>&1
          - docker build hasher -t hasher >> $LOG 2>&1
          - docker build webui -t webui >> $LOG 2>&1
          - docker build worker -t worker >> $LOG 2>&1
          - docker stack deploy -c docker-compose.yml '${input.application}' >> $LOG 2>&1
          - echo "`date` - Manager setup complete" >> $LOG 2>&1
          - logger --sd-id ${input.application}@0 --sd-param deployment=\"${substring(env.deploymentId,0,8)}\" --sd-param source=\"cloudinit\" -n ${input.syslog-address} -P ${input.syslog-port} --${input.syslog-protocol} < $LOG
      networks:
        - network: '${resource.network.id}'
  workers:
    type: Cloud.vSphere.Machine
    dependsOn:
      - manager
    metadata:
      layoutPosition:
        - 0
        - 1
    properties:
      count: '${input.workers}'
      flavor: '${input.vmsize}'
      image: ubuntu2004
      name: 'dsb-${input.application}-${input.requestor}-workers-${substring(env.deploymentId,0,8)}'
      cloudConfig: |
        #cloud-config
        ssh_pwauth: yes
        repo_update: true
        repo_upgrade: all
        package_update: true
        package_upgrade: all
        packages: # TODO: Remove uneeded packages
          - sshpass
          - net-tools
          - docker.io
          - docker-compose
        write_files:
          - content: |
              #!/bin/sh
              success=0
              while [ $success -eq 0 ]
              do
                SWARM_MGR_IP='${resource.manager.networks[0].address}'
                sleep 15
                echo "`date` - Worker ${count.index} registering with Manager at $SWARM_MGR_IP"
                sshpass -p 'VMware1!' ssh -o StrictHostKeyChecking=no root@$SWARM_MGR_IP docker swarm join-token worker|sed -n 3P > /tmp/swarmjoin.sh
                if [ $? -eq 0 ] && [ -s /tmp/swarmjoin.sh ]
                  then
                    sh /tmp/swarmjoin.sh
                    if [ $? -eq 0 ]
                    then
                      success=1
                    fi
                  fi
                done
                echo "`date` - Worker ${count.index} registered with manager"
            path: /root/register-with-manager.sh
            permissions: 755
        runcmd:
          - LOG=/var/log/app.log
          - echo "`date` - Worker ${count.index} starting setup" >> $LOG 2>&1
          - hostnamectl set-hostname '${self.name}'-[${count.index}] >> $LOG 2>&1
          - echo "`date` - Configuring Docker" >> $LOG 2>&1
          - systemctl enable docker
          - echo '{"log-driver":"syslog","log-opts":{"syslog-address":"${input.syslog-protocol}://${input.syslog-address}:${input.syslog-port}","tag":"magna-smart-placement-zoo/application=${input.application}/deployment=${substring(env.deploymentId,0,8)}/{{.ImageName}}/{{.Name}}/{{.ID}}"}}' > /etc/docker/daemon.json
          - service docker restart
          - echo "`date` - Worker cloning" >> $LOG 2>&1
          - cd /root
          - git clone ${input.repo} >> $LOG 2>&1 # for webgui files
          - echo "`date` - Worker building ${input.application}" >> $LOG 2>&1
          - cd /root/dockercoins
          - # For using vmware corporate Harbor as a docker hub proxy
          - sed -i 's|FROM\ |FROM\ harbor-repo.vmware.com/dockerhub-proxy-cache/library/|g' rng/Dockerfile >> $LOG 2>&1
          - sed -i 's|FROM\ |FROM\ harbor-repo.vmware.com/dockerhub-proxy-cache/library/|g' hasher/Dockerfile >> $LOG 2>&1
          - sed -i 's|FROM\ |FROM\ harbor-repo.vmware.com/dockerhub-proxy-cache/library/|g' webui/Dockerfile >> $LOG 2>&1
          - sed -i 's|FROM\ |FROM\ harbor-repo.vmware.com/dockerhub-proxy-cache/library/|g' worker/Dockerfile >> $LOG 2>&1
          - #
          - docker build rng -t rng >> $LOG 2>&1
          - docker build hasher -t hasher >> $LOG 2>&1
          - docker build webui -t webui >> $LOG 2>&1
          - docker build worker -t worker >> $LOG 2>&1
          - echo "`date` - Worker ${count.index} registering with manager" >> $LOG 2>&1
          - /root/register-with-manager.sh >> $LOG 2>&1
          - echo "`date` - Worker ${count.index} setup complete" >> $LOG 2>&1
          - logger --sd-id ${input.application}@0 --sd-param deployment=\"${substring(env.deploymentId,0,8)}\" --sd-param source=\"cloudinit\" -n ${input.syslog-address} -P ${input.syslog-port} --${input.syslog-protocol} < $LOG
      networks:
        - network: '${resource.network.id}'
  network:
    type: Cloud.vSphere.Network
    metadata:
      layoutPosition:
        - 1
        - 0
    properties:
      networkType: existing
